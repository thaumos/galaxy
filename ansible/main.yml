---
- hosts: django
  gather_facts: no
  tasks:
    - name: Update all packages
      yum: name=* state=latest

    - name: Install epel
      yum: name=epel-release state=present

    - name: Install yum packages required for galaxy
      yum: name="{{ item }}" update_cache=yes
      with_items:
      - "@Development tools"
      - make
      - vim
      - postgresql
      - python-pip
      - python-devel
      - postgresql-devel
   
    - name: Create group django
      group: name=django gid=1000 

    - name: Create user django
      user: name=django uid=1000 group=django createhome=no

    - name: Download dumb-init
      get_url:
        url: https://github.com/Yelp/dumb-init/releases/download/v1.1.3/dumb-init_1.1.3_amd64
        dest: /usr/local/bin/dumb-init
        owner: root
        group: root
        mode: 755

    - name: Clear yum cache
      command: yum clean all

    - name: Install python packages
      pip: requirements=/galaxy/requirements.txt

    - name: Clear pip cache
      file: path=/root/.cache/pip state=absent

    - name: Create the /etc/galaxy directory
      file: path=/etc/galaxy owner=root group=django mode=2775 state=directory

    - name: Create /galaxy_logs directory
      file: path=/galaxy_logs owner=django group=django mode=0775 state=directory

    - name: Install galaxy
      command: python ./setup.py develop
      args:
        chdir: /galaxy

    - name: Deploy settings file
      template: src=../settings/settings_develop.py.j2 dest=/etc/galaxy/settings.py owner=root group=django mode=0660

    - name: Create the SECRET_KEY file
      command: /usr/bin/python -c "import uuid; file('/etc/galaxy/SECRET_KEY', 'wb').write(uuid.uuid4().hex)" creates=/etc/galaxy/SECRET_KEY

    - name: Adjust SECRET_KEY permissions
      file: path=/etc/galaxy/SECRET_KEY state=file owner=root group=django mode=0660

    - name: Wait for postgresql
      wait_for: host=postgres port=5432 connect_timeout=10

    - name: Perform initial migrations 
      command: galaxy-manage migrate --noinput --fake-initial

    - name: Disable triggers
      command: psql -h postgres -d galaxy -U galaxy -f /galaxy/test-data/disable_triggers.sql

    - name: Import testing data
      shell: cat /galaxy/test-data/role_data.dmp.gz | gunzip | psql -h postgres -d "{{ galaxy_postgres_db }}" -U "{{ galaxy_postgres_user }}"

    - name: Enable triggers
      command: psql -h postgres -d galaxy -U galaxy -f /galaxy/test-data/enable_triggers.sql

    - name: Remove test data file
      file: path=/role_data.dmp.gz state=absent

    - name: Create galaxy admin user
      expect:
        command: galaxy-manage createsuperuser
        responses:
          Username: "{{ galaxy_admin_username }}"
          "Email address": "admin@galaxy.com"
          Password: "{{ galaxy_admin_password }}"
          "Password (again)": "{{ galaxy_admin_password }}"
 
    - name: Rebuild Galaxy index
      command: python ./manage.py rebuild_index --noinput
      args:
        chdir: /galaxy

    - name: Rebuild custom indexes
      command: python ./manage.py rebuild_galaxy_indexes
      args:
        chdir: /galaxy

    - name: Remove any log files
      command: rm -f *.log
      args:
        chdir: /galaxy_logs

- hosts: gulp
  gather_facts: no
  tasks:
    - name: Install epel
      yum: name=epel-release 

    - name: Install nodejs
      yum: name="{{ item }}"
      with_items:
        - nodejs
        - npm

    - name: Install development tools
      npm: path=/galaxy

    - name: Install gulp globally
      npm: name=gulp global=yes

    - name: Install less globally
      npm: name=less global=yes

